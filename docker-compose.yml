version: '3.8'

services:
  homeassistant:
    container_name: homeassistant
    image: "ghcr.io/home-assistant/home-assistant:stable"
    volumes:
      - /volume1/docker/homeassistant:/config
      - /var/run/docker.sock:/var/run/docker.sock 
      - /etc/localtime:/etc/localtime:ro
      - /run/dbus:/run/dbus:ro
    restart: unless-stopped
    network_mode: host

  esphome:
    container_name: esphome
    image: ghcr.io/esphome/esphome
    volumes:
      - /volume1/docker/esphome/config:/config
      - /etc/localtime:/etc/localtime:ro
    restart: unless-stopped
    # 'privileged: true' es necesario si quieres flashear dispositivos ESP por USB desde la NAS.
    # Si solo compilas y descargas, o usas OTA, puedes eliminar la siguiente línea.
    # privileged: true 
    network_mode: host
    environment:
      # Puedes cambiar el usuario y la contraseña de la interfaz web de ESPHome aquí
      - USERNAME=admin
      - PASSWORD=Iz022394
    labels:
      - com.centurylinklabs.watchtower.enable=true

  nodered:
    container_name: nodered
    image: nodered/node-red:latest
    volumes:
      - /volume1/docker/nodered/data:/data
    restart: unless-stopped
    ports:
      - "1880:1880"
    environment:
      - TZ=America/Mexico_City
    labels:
      - com.centurylinklabs.watchtower.enable=true

  mosquitto:
    container_name: mosquitto
    image: eclipse-mosquitto:latest
    volumes:
      # Asegúrate de que el archivo 'mosquitto.conf' exista en la carpeta del host antes de iniciar.
      - /volume1/docker/mosquitto/config:/mosquitto/config
      - /volume1/docker/mosquitto/data:/mosquitto/data
      - /volume1/docker/mosquitto/log:/mosquitto/log
    restart: unless-stopped
    ports:
      - "1883:1883"
      - "9001:9001"
    environment:
      - TZ=America/Mexico_City

  zigbee2mqtt:
    container_name: zigbee2mqtt
    image: koenkk/zigbee2mqtt
    volumes:
      - /volume1/docker/zigbee2mqtt/data:/app/data
      - /run/udev:/run/udev:ro
    restart: unless-stopped
    ports:
      - "8080:8080"
    devices:
      # ▼▼▼ ¡CRÍTICO! DEBES CAMBIAR ESTO POR LA RUTA REAL DE TU DONGLE ZIGBEE ▼▼▼
      - /dev/ttyACM0:/dev/ttyACM0   # Descomenta y usa esta línea si tu dongle es ttyACM0
      # - /dev/ttyUSB0:/dev/ttyUSB0   # Descomenta y usa esta línea si tu dongle es ttyUSB0
      # Es muy probable que sea una de las dos de arriba.
    environment:
      - TZ=America/Mexico_City

  codeserver:
    image: linuxserver/code-server:latest
    container_name: codeserver
    volumes:
      - /volume1/docker/vcode:/config
      # Estos mapeos te permiten editar tus archivos de Home Assistant y ESPHome desde Code-Server
      - /volume1/docker/homeassistant:/config/workspace/HomeAssistant
      - /volume1/docker/esphome:/config/workspace/ESPHome
    restart: unless-stopped
    ports:
      - "8443:8443"
    environment:
      # Se ejecuta como root para máxima compatibilidad en Synology sin configuración manual.
      - PUID=0
      - PGID=0
      - TZ=America/Mexico_City
      # Contraseñas para la interfaz web de Code-Server
      - PASSWORD=Iz022394
      - SUDO_PASSWORD=Iz0222394
      - DEFAULT_WORKSPACE=/config/workspace
    labels:
      - com.centurylinklabs.watchtower.enable=true

  music-assistant-server:
    image: ghcr.io/music-assistant/server:latest
    container_name: music-assistant-server
    restart: unless-stopped
    network_mode: host
    volumes:
      - /volume1/docker/music-assistant-server/data:/data
    cap_add:
      - SYS_ADMIN
      - DAC_READ_SEARCH
    security_opt:
      - apparmor:unconfined
    environment:
      - LOG_LEVEL=info
      - TZ=America/Mexico_City
    labels:
      - com.centurylinklabs.watchtower.enable=true

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower 
    volumes: 
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
    environment: 
      - TZ=America/Mexico_City
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_SCHEDULE=0 0 5 * * 5 # Actualiza los viernes a las 5 AM
      - WATCHTOWER_LABEL_ENABLE=true
