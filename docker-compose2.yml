version: '3'
services:
  homeassistant:
    container_name: homeassistant
    image: "ghcr.io/home-assistant/home-assistant:stable"
    volumes:
      - /volume1/docker/homeassistant:/config
      # Eliminar el acceso al socket Docker si Home Assistant no gestiona otros contenedores Docker
      # - /var/run/docker.sock:/var/run/docker.sock 
      - /etc/localtime:/etc/localtime:ro
      - /run/dbus:/run/dbus:ro # Necesario para Bluetooth, etc.
    restart: always
    # Eliminado privileged: true - Riesgo de seguridad importante y rara vez necesario.
    network_mode: host # Mantenido para la autodescubierta (mDNS/SSDP) de dispositivos en la red local.

  esphome:
    container_name: esphome
    image: esphome/esphome:latest
    volumes:
      - /volume1/docker/esphome/config:/config
      - /etc/localtime:/etc/localtime:ro
    restart: always
    # Eliminado privileged: true - Usar 'devices' en su lugar.
    # Eliminado network_mode: host - Usar 'ports' en su lugar.
    ports:
      - "6052:6052" # Interfaz web de ESPHome
    devices:
      # <<-- DEBES AJUSTAR ESTO A LA RUTA REAL DE TU DISPOSITIVO ESP -->>
      - /dev/ttyUSB0:/dev/ttyUSB0 # Ejemplo: Ruta común para ESP32/ESP8266
      # O también podrías necesitar:
      # - /dev/ttyACM0:/dev/ttyACM0
      # O usar la ruta por ID para mayor robustez:
      # - /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0:/dev/ttyUSB0 
    environment:
      - USERNAME=admin
      - PASSWORD=Iz022394
    labels:
      - com.centurylinklabs.watchtower.enable=true

  nodered:
    container_name: nodered
    image: nodered/node-red:latest
    volumes:
      - /volume1/docker/nodered/data:/data
    restart: always
    # Eliminado privileged: true - No es necesario para Node-RED.
    # Eliminado network_mode: host - Usar 'ports' en su lugar.
    ports:
      - "1880:1880" # Interfaz web de Node-RED
    environment:
      - TZ=America/Mexico_City
    labels:
      - com.centurylinklabs.watchtower.enable=true

  mosquitto:
    container_name: mosquitto
    image: eclipse-mosquitto:latest
    volumes:
      - /volume1/docker/mosquitto/config/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - /volume1/docker/mosquitto/config:/mosquitto/config # Opcional: Solo si necesitas que todo el directorio /mosquitto/config sea persistente, además del archivo .conf
      - /volume1/docker/mosquitto/data:/mosquitto/data
      - /volume1/docker/mosquitto/log:/mosquitto/log
    restart: always
    # Eliminado privileged: true - No es necesario para Mosquitto.
    # Eliminado network_mode: host - Usar 'ports' en su lugar.
    ports:
      - "1883:1883" # Puerto MQTT estándar
      - "9001:9001" # MQTT sobre WebSockets
    environment:
      - TZ=America/Mexico_City
    # SIN ETIQUETA - No se actualizará automáticamente

  zigbee2mqtt:
    container_name: zigbee2mqtt
    image: koenkk/zigbee2mqtt
    volumes:
      - /volume1/docker/zigbee2mqtt/data:/app/data
      - /run/udev:/run/udev:ro # Necesario para el descubrimiento de dispositivos USB
    restart: always
    # Eliminado privileged: true - Usar 'devices' en su lugar.
    # Eliminado network_mode: host - Usar 'ports' en su lugar.
    ports:
      - "8080:8080" # Interfaz web de Zigbee2MQTT
    devices:
      # <<-- DEBES AJUSTAR ESTO A LA RUTA REAL DE TU DONGLE ZIGBEE -->>
      - /dev/ttyACM0:/dev/ttyACM0 # Ejemplo: Ruta común para Conbee/Zigate
      # O para otros dongles:
      # - /dev/ttyUSB0:/dev/ttyUSB0
      # O usar la ruta por ID para mayor robustez:
      # - /dev/serial/by-id/usb-ITead_Sonoff_Zigbee_3.0_USB_Dongle_Plus_XXXXXXX-if00-port0:/dev/ttyUSB0
    environment:
      - TZ=America/Mexico_City
    # SIN ETIQUETA - No se actualizará automáticamente

  code-server:
    image: linuxserver/code-server:latest
    container_name: codeserver
    volumes:
      - /volume1/docker/vcode:/config
      - /volume1/docker/homeassistant:/config/workspace/HomeAssistant
      - /volume1/docker/esphome:/config/workspace/ESPHome
    restart: always
    # Eliminado privileged: true - No es necesario para Code-Server.
    # Eliminado network_mode: host - Usar 'ports' en su lugar.
    ports:
      - "8443:8443" # Interfaz web de Code-Server (HTTPS por defecto)
    environment:
      - PUID=0 # Mantener 0 para ejecutar como root si los permisos de los volúmenes del host son root
      - PGID=0 # Considera cambiar a un PUID/PGID de un usuario sin privilegios (ej. 1000) 
               # y ajustar los permisos en las carpetas /volume1/docker/ para mayor seguridad.
      - TZ=America/Mexico_City
      - PASSWORD=Iz022394
      - SUDO_PASSWORD=Pa$$w0rd
      - DEFAULT_WORKSPACE=/config/workspace
    labels:
      - com.centurylinklabs.watchtower.enable=true

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower 
    volumes: 
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always 
    environment: 
      - TZ=America/Mexico_City
      - WATCHTOWER_CLEANUP=true # Limpia imágenes antiguas después de la actualización
      - WATCHTOWER_SCHEDULE="0 0 5 * * 5" # Ejecutar los viernes a las 05:00 AM (0 0 5 día_del_mes * 5 = Viernes)
      - WATCHTOWER_INCLUDE_RESTARTING=true # Incluye contenedores que están en estado de reinicio
      - WATCHTOWER_MONITOR_ONLY=false # Por defecto es false, pero explícito es mejor
      - WATCHTOWER_LABEL_ENABLE=true  # Habilita el filtrado por etiquetas para actualizaciones
